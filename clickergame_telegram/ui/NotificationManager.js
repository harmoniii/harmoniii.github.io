// ui/NotificationManager.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
import { CleanupMixin } from '../core/CleanupManager.js';
import { GAME_CONSTANTS } from '../config/GameConstants.js';

export class NotificationManager extends CleanupMixin {
  constructor() {
    super();
    this.container = null;
    this.activeNotifications = new Set();
    this.initializeContainer();
  }

  initializeContainer() {
    this.container = document.getElementById('notifications');
    if (!this.container) {
      console.warn('Notifications container not found, creating one');
      this.createContainer();
    }
  }

  createContainer() {
    this.container = document.createElement('div');
    this.container.id = 'notifications';
    this.container.className = 'notifications-container';
    document.body.appendChild(this.container);
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è DOM —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    this.registerDOMElement(this.container);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ã—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  show(message, duration = GAME_CONSTANTS.NOTIFICATION_DURATION) {
    if (!this.isActive()) return;
    
    const notification = this.createNotification(message, 'notification');
    this.displayNotification(notification, duration);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–≤—ã–∫–µ
  showSkill(title, description, duration = GAME_CONSTANTS.SKILL_NOTIFICATION_DURATION) {
    if (!this.isActive()) return;
    
    const notification = this.createSkillNotification(title, description);
    this.displayNotification(notification, duration);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–∏–ø–æ–º
  showTyped(message, type = 'info', duration = GAME_CONSTANTS.NOTIFICATION_DURATION) {
    if (!this.isActive()) return;
    
    const notification = this.createNotification(message, `notification notification-${type}`);
    this.displayNotification(notification, duration);
  }

  // –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  createNotification(message, className = 'notification') {
    const notification = document.createElement('div');
    notification.className = className;
    notification.textContent = message || 'Unknown notification';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
    notification.style.transform = 'translateX(100%)';
    notification.style.opacity = '0';
    
    return notification;
  }

  // –°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–≤—ã–∫–µ
  createSkillNotification(title, description) {
    const notification = document.createElement('div');
    notification.className = 'notification skill-notification';
    
    notification.innerHTML = `
      <div class="skill-notification-title">${title}</div>
      <div class="skill-notification-desc">${description}</div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
    notification.style.transform = 'translateX(100%) scale(0.8)';
    notification.style.opacity = '0';
    
    return notification;
  }

  // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  displayNotification(notification, duration) {
    if (!this.container) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    this.container.appendChild(notification);
    this.activeNotifications.add(notification);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    this.createTimeout(() => {
      if (notification.parentNode) {
        notification.style.transform = 'translateX(0) scale(1)';
        notification.style.opacity = '1';
        notification.style.transition = 'all 0.3s ease-out';
      }
    }, 50);
    
    // –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    this.createTimeout(() => {
      this.removeNotification(notification);
    }, duration);
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    this.limitNotifications();
  }

  // –£–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  removeNotification(notification) {
    if (!notification || !this.activeNotifications.has(notification)) return;
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    notification.style.transform = 'translateX(100%)';
    notification.style.opacity = '0';
    notification.style.transition = 'all 0.3s ease-in';
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ DOM –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    this.createTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
      this.activeNotifications.delete(notification);
    }, 300);
  }

  // –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  limitNotifications(maxNotifications = 5) {
    if (this.activeNotifications.size <= maxNotifications) return;
    
    // –£–¥–∞–ª—è–µ–º —Å–∞–º—ã–µ —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notificationsArray = Array.from(this.activeNotifications);
    const toRemove = notificationsArray.slice(0, notificationsArray.length - maxNotifications);
    
    toRemove.forEach(notification => {
      this.removeNotification(notification);
    });
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  clearAll() {
    const notifications = Array.from(this.activeNotifications);
    notifications.forEach(notification => {
      this.removeNotification(notification);
    });
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
  showSuccess(message, duration) {
    this.showTyped(message, 'success', duration);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  showError(message, duration) {
    this.showTyped(message, 'error', duration);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
  showWarning(message, duration) {
    this.showTyped(message, 'warning', duration);
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showInfo(message, duration) {
    this.showTyped(message, 'info', duration);
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  getActiveCount() {
    return this.activeNotifications.size;
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  hasActiveNotifications() {
    return this.activeNotifications.size > 0;
  }

  // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä
  destroy() {
    console.log('üßπ NotificationManager cleanup started');
    
    this.clearAll();
    super.destroy();
    
    console.log('‚úÖ NotificationManager destroyed');
  }
}