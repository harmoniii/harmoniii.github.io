// telegram-integration.js - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ–±–ª–∞—á–Ω—ã–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–º–∏
import { TelegramWebApp } from './telegram-webapp.js';
import { TelegramCloudSaveManager } from './ui/TelegramCloudSaveManager.js';

class TelegramGameIntegration {
  constructor() {
    this.telegramWebApp = null;
    this.cloudSaveManager = null;
    this.gameCore = null;
    this.isInitialized = false;
    this.leaderboardData = null;
    
    this.initialize();
  }

  async initialize() {
    try {
      console.log('üì± Initializing Telegram Game Integration...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
      this.telegramWebApp = new TelegramWebApp();
      
      // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã
      await this.waitForGameCore();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±–ª–∞—á–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      this.initializeCloudSaves();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UI –¥–ª—è Telegram
      this.setupTelegramUI();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
      this.bindEvents();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–∏–¥–µ—Ä–±–æ—Ä–¥
      this.setupLeaderboard();
      
      this.isInitialized = true;
      console.log('‚úÖ Telegram Game Integration initialized');
      
    } catch (error) {
      console.error('‚ùå Failed to initialize Telegram integration:', error);
    }
  }

  async waitForGameCore() {
    return new Promise((resolve) => {
      const checkGameCore = () => {
        if (window.gameCore && window.gameCore.gameState) {
          this.gameCore = window.gameCore;
          console.log('üéÆ Game core found');
          resolve();
        } else {
          setTimeout(checkGameCore, 100);
        }
      };
      checkGameCore();
    });
  }

  initializeCloudSaves() {
    if (!this.gameCore || !this.telegramWebApp) {
      console.warn('‚ö†Ô∏è Cannot initialize cloud saves - missing dependencies');
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –æ–±–ª–∞—á–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π
    this.cloudSaveManager = new TelegramCloudSaveManager(
      this.gameCore.gameState, 
      this.telegramWebApp
    );
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ gameCore –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
    this.gameCore.cloudSaveManager = this.cloudSaveManager;
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    if (this.gameCore.cleanupManager) {
      this.gameCore.cleanupManager.registerComponent(this.cloudSaveManager, 'CloudSaveManager');
    }
    
    console.log('‚òÅÔ∏è Cloud save manager initialized');
  }

  setupTelegramUI() {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram –∫–Ω–æ–ø–∫–∏
    this.setupMainButton();
    this.setupBackButton();
    
    // –°–æ–∑–¥–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    this.createQuickActions();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–µ–Ω—é Telegram
    this.setupTelegramMenu();
    
    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    this.adaptForMobile();
  }

  setupMainButton() {
    if (!this.telegramWebApp.tg) return;
    
    const mainButton = this.telegramWebApp.tg.MainButton;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–±–ª–∞—á–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    mainButton.setText('‚òÅÔ∏è Save to Cloud');
    mainButton.onClick(() => {
      if (this.cloudSaveManager) {
        this.cloudSaveManager.forceSyncToCloud();
      }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    this.showMainButtonOnChanges();
  }

  setupBackButton() {
    if (!this.telegramWebApp.tg) return;
    
    const backButton = this.telegramWebApp.tg.BackButton;
    
    backButton.onClick(() => {
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–∞–Ω–µ–ª–∏
      if (this.gameCore.managers?.ui?.isPanelOpen()) {
        this.gameCore.managers.ui.hidePanel();
        backButton.hide();
      } else {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        this.telegramWebApp.tg.close();
      }
    });
  }

  createQuickActions() {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ UI
    const quickActionsHTML = `
      <div id="telegram-quick-actions" class="telegram-quick-actions">
        <button id="cloud-save-btn" class="quick-action-btn" title="Save to Cloud">
          ‚òÅÔ∏è
        </button>
        <button id="cloud-load-btn" class="quick-action-btn" title="Load from Cloud">
          üì•
        </button>
        <button id="leaderboard-btn" class="quick-action-btn" title="Show Leaderboard">
          üèÜ
        </button>
        <button id="share-btn" class="quick-action-btn" title="Share Achievement">
          üì§
        </button>
      </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
    const quickActionsContainer = document.createElement('div');
    quickActionsContainer.innerHTML = quickActionsHTML;
    document.body.appendChild(quickActionsContainer.firstElementChild);
    
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    this.bindQuickActionHandlers();
  }

  bindQuickActionHandlers() {
    const cloudSaveBtn = document.getElementById('cloud-save-btn');
    const cloudLoadBtn = document.getElementById('cloud-load-btn');
    const leaderboardBtn = document.getElementById('leaderboard-btn');
    const shareBtn = document.getElementById('share-btn');
    
    if (cloudSaveBtn) {
      cloudSaveBtn.onclick = () => {
        this.cloudSaveManager?.forceSyncToCloud();
        this.telegramWebApp.showHapticFeedback('selection');
      };
    }
    
    if (cloudLoadBtn) {
      cloudLoadBtn.onclick = () => {
        this.cloudSaveManager?.forceLoadFromCloud();
        this.telegramWebApp.showHapticFeedback('selection');
      };
    }
    
    if (leaderboardBtn) {
      leaderboardBtn.onclick = () => {
        this.showLeaderboard();
        this.telegramWebApp.showHapticFeedback('selection');
      };
    }
    
    if (shareBtn) {
      shareBtn.onclick = () => {
        this.shareProgress();
        this.telegramWebApp.showHapticFeedback('selection');
      };
    }
  }

  setupTelegramMenu() {
    // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é Telegram
    const menuHTML = `
      <div id="telegram-menu" class="telegram-menu hidden">
        <div class="menu-content">
          <h3>‚öôÔ∏è Grid Clicker Menu</h3>
          <button id="cloud-sync-btn" class="menu-btn">
            ‚òÅÔ∏è Cloud Sync Status
          </button>
          <button id="export-data-btn" class="menu-btn">
            üì§ Export Game Data
          </button>
          <button id="view-stats-btn" class="menu-btn">
            üìä View Statistics
          </button>
          <button id="telegram-help-btn" class="menu-btn">
            ‚ùì Help & Rules
          </button>
          <button id="close-menu-btn" class="menu-btn close-btn">
            ‚úñÔ∏è Close
          </button>
        </div>
      </div>
    `;
    
    const menuContainer = document.createElement('div');
    menuContainer.innerHTML = menuHTML;
    document.body.appendChild(menuContainer.firstElementChild);
    
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
    this.bindMenuHandlers();
  }

  bindMenuHandlers() {
    const menu = document.getElementById('telegram-menu');
    const closeBtn = document.getElementById('close-menu-btn');
    const cloudSyncBtn = document.getElementById('cloud-sync-btn');
    const exportBtn = document.getElementById('export-data-btn');
    const statsBtn = document.getElementById('view-stats-btn');
    const helpBtn = document.getElementById('telegram-help-btn');
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
    const menuTog