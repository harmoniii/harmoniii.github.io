// game.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
import { GameCore } from './core/GameCore.js';
import { eventBus, GameEvents } from './core/GameEvents.js';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
let gameCore = null;

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function main() {
  try {
    console.log('üöÄ Starting Advanced Clicker v1.0.8...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
    setupErrorHandlers();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setupModernPageHandlers();
    
    // –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ —è–¥—Ä–æ
    gameCore = new GameCore();
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    window.gameCore = gameCore;
    window.eventBus = eventBus;
    window.GameEvents = GameEvents;
    
    // –ù–û–í–û–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
    if (gameCore && typeof gameCore.enableDebugMode === 'function') {
      gameCore.enableDebugMode();
    }
    
    console.log('‚úÖ Game started successfully');
    console.log('üêõ Debug mode enabled! Use window.gameDebug for debugging');
    
  } catch (error) {
    console.error('üíÄ Critical error in main:', error);
    handleCriticalError(error);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
function setupErrorHandlers() {
  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  window.addEventListener('error', (event) => {
    console.error('üíÄ Global error:', event.error);
    
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
    if (gameCore && typeof gameCore.autoSave === 'function') {
      try {
        gameCore.autoSave();
        console.log('‚úÖ Emergency save completed');
      } catch (saveError) {
        console.error('‚ùå Emergency save failed:', saveError);
      }
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
  window.addEventListener('unhandledrejection', (event) => {
    console.error('üíÄ Unhandled promise rejection:', event.reason);
    event.preventDefault();
  });
}

function setupModernPageHandlers() {
  const handlePageUnload = () => {
    console.log('üëã Page unloading, attempting save...');
    
    // –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    if (gameCore && 
        typeof gameCore.autoSave === 'function' && 
        gameCore.isDestroyed !== true) {
      try {
        const saveResult = gameCore.autoSave();
        if (saveResult) {
          console.log('‚úÖ Final save completed successfully');
        } else {
          console.log('‚ö†Ô∏è Final save completed with warnings');
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è Error during final save:', error);
      }
    } else {